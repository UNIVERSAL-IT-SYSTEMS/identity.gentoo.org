# Django production settings for okupy project.

# Fill in the full path of your project here
PROJECT_ROOT = '/full/path/to/okupy/'

# The base configuration, it shouldn't be touched
from base import *

DEBUG = False
TEMPLATE_DEBUG = DEBUG

ADMINS = (
    # ('Your Name', 'your_email@example.com'),
)

MANAGERS = ADMINS

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.', # Add 'postgresql_psycopg2', 'postgresql', 'mysql', 'sqlite3' or 'oracle'.
        'NAME': '',                      # Or path to database file if using sqlite3.
        'USER': '',                      # Not used with sqlite3.
        'PASSWORD': '',                  # Not used with sqlite3.
        'HOST': '',                      # Set to empty string for localhost. Not used with sqlite3.
        'PORT': '',                      # Set to empty string for default. Not used with sqlite3.
    }
}

# Local time zone for this installation. Choices can be found here:
# http://en.wikipedia.org/wiki/List_of_tz_zones_by_name
# although not all choices may be available on all operating systems.
# On Unix systems, a value of None will cause Django to use the same
# timezone as the operating system.
# If running in a Windows environment this must be set to the same as your
# system time zone.
TIME_ZONE = 'America/Chicago'

# Language code for this installation. All choices can be found here:
# http://www.i18nguy.com/unicode/language-identifiers.html
LANGUAGE_CODE = 'en-us'

SITE_ID = 1

# If you set this to False, Django will make some optimizations so as not
# to load the internationalization machinery.
USE_I18N = True

# If you set this to False, Django will not format dates, numbers and
# calendars according to the current locale
USE_L10N = True

# Additional locations of static files
STATICFILES_DIRS = (
    # Put strings here, like "/home/html/static" or "C:/www/django/static".
    # Always use forward slashes, even on Windows.
    # Don't forget to use absolute paths, not relative paths.
)

# Make this unique, and don't share it with anybody.
SECRET_KEY = ''

# Blowfish key, needed to encrypt/decrypt the user's password
BLOWFISH_KEY = ''

# Choose the appropriate User Profile Class
# Options are:
#  - accounts.UserProfile (the generic one)
#  - accounts.GentooProfile (Gentoo specific)
#  - accounts.KDEProfile (KDE specific)
AUTH_PROFILE_MODULE = 'accounts.UserProfile'


# LDAP specific variables

# The URI of the LDAP server
LDAP_SERVER_URI = 'ldap://ldap.example.com'

# Name of the Organization, and its objectClasses
# This will be used for LDAP initialization
LDAP_O_NAME = {
    'dc=example,dc=com': ['organization', 'dcObject'],
}

# List of OU's, and their objectClasses. These will
# be used in LDAP initialization and also in LDAP
# queries, eg to search for a user
# The first one is also the BASE_DN for new users
LDAP_OU_LIST = {
    'ou=users,dc=example,dc=com': ['organizationalUnit'],
    'ou=developers,dc=example,dc=com': ['organizationalUnit'],
}

# For ease of use, create a list of the objectclasses based
# on the above
LDAP_BASE_DN = LDAP_OU_LIST.keys()

# The system needs either an anon (minimal-privileged) user
# to perform basic searches, in case anon queries are not
# applicable.
LDAP_ANON_USER_DN = 'cn=anonuser,dc=example,dc=com'
LDAP_ANON_USER_PW = 'password'

# The admin user, is needed only to create new accounts
LDAP_ADMIN_USER_DN = 'cn=Manager,dc=example,dc=com'
LDAP_ADMIN_USER_PW = 'password'

# The prefix of the attrs, such as cn or uid
LDAP_BASE_ATTR = 'uid'

# The basic LDAP data, also required by the Django DB
LDAP_USER_ATTR_MAP = {
    'username': 'uid',
    'first_name': 'givenName',
    'last_name': 'sn',
    'email': 'mail',
}

# Additional data, that can be mapped by the Django
# user profile
LDAP_PROFILE_ATTR_MAP = {
    'cn': 'cn',
    'all_mails': 'mail',
    'gecos': 'gecos',
#    Gentoo specific variables
#    'gentoo_roles': 'gentooRoles',
#    'gentoo_access': 'gentooAccess',
#    'gentoo_location': 'gentooLocation',
#    'gentoo_status': 'gentooStatus',
#    'lat': 'lat',
#    'lon': 'lon',
#    'gpg_fingerprint': 'gpgfingerprint',
#    'gpg_key': 'gpgkey',
#    'ssh_public_key': 'sshPublicKey',
#     KDE specific variables
#
#
}

# The attribute which has the groups that the user is part of
LDAP_ACL_ATTR = 'groupAccess'

# Various groups and the equivalent booleans in UserProfile
LDAP_ACL_GROUPS = {
    'is_infra': 'infra-ldapadmin.group',
    'is_devrel' :'devrel.group',
    'is_recruiter': 'recruiters.group',
    'is_trustee': 'trustees.group',
    'is_docs': 'docs.group',
    'is_security': 'security.group',
    'is_pr': 'pr.group',
}

# List of attributes that are public to all users
LDAP_PROFILE_PUBLIC_ATTRIBUTES = ['username', 'first_name', 'last_name', 'cn', 'mail',
    'gentooAccess', 'gentooIm', 'gentooJoin', 'gentooLocation', 'gentooRoles', 'gentooSPF'
    'gentooStatus', 'lat', 'lon', 'gpgfingerprint', 'gpgkey', 'gecos']

# List of private attributes
LDAP_PROFILE_PRIVATE_ATTRIBUTES = ['birthday']

# The following groups have permissions to edit other users' profiles
LDAP_ACL_GROUPS_EDIT = ['is_recruiter', 'is_infra']

# List of objectClasses, used in user creation
LDAP_NEW_USER_OBJECTCLASS = ['person', 'top', 'posixAccount',
    'organizationalPerson', 'inetOrgPerson', 'shadowAccount']

# Base DN for new user
LDAP_NEW_USER_BASE_DN = 'ou=users,dc=example,dc=com'
