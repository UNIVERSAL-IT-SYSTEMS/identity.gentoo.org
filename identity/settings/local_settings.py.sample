# -*- conding: utf-8 -*-

# Sample configuration file for identity.gentoo.org website
# Rename it to local_settings.py and change accordingly the vars

# The listed admins will receive mail notifications
ADMINS = (
    ('admin', 'admin@localhost'),
)

# Select "True" for development environment, "False" for production environment
DEVELOPMENT = True

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.', # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.
        'NAME': '',                      # Or path to database file if using sqlite3.
        # The following settings are not used with sqlite3:
        'USER': '',
        'PASSWORD': '',
        'HOST': '',                      # Empty for localhost through domain sockets or '127.0.0.1' for localhost through TCP.
        'PORT': '',                      # Set to empty string for default.
    }
}

# Make this unique, and don't share it with anybody.
SECRET_KEY = 'secret'

# Variables regarding email sending (host, credentials)
# SERVER_EMAIL = 'user@localhost'
# EMAIL_HOST = 'localhost'
# EMAIL_PORT = '25'
# EMAIL_HOST_USER = 'user'
# EMAIL_HOST_PASSWORD = 'secret'
# EMAIL_USE_TLS = False

# LDAP specific variables

# The URI of the LDAP server
LDAP_SERVER_URI = 'ldap://ldap.example.com'

# Name of the Organization, and its objectClasses
# This will be used for LDAP initialization
LDAP_O_NAME = {
    'dc=example,dc=com': ['organization', 'dcObject'],
}

# List of OU's, and their objectClasses. These will
# be used in LDAP initialization and also in LDAP
# queries, eg to search for a user
# The first one is also the BASE_DN for new users
LDAP_OU_LIST = {
    'ou=users,dc=example,dc=com': ['organizationalUnit'],
    'ou=developers,dc=example,dc=com': ['organizationalUnit'],
}

# For ease of use, create a list of the objectclasses based
# on the above
LDAP_BASE_DN = LDAP_OU_LIST.keys()

# The system needs either an anon (minimal-privileged) user
# to perform basic searches, in case anon queries are not
# applicable.
LDAP_ANON_USER_DN = 'cn=anonuser,dc=example,dc=com'
LDAP_ANON_USER_PW = 'password'

# The admin user, is needed only to create new accounts
LDAP_ADMIN_USER_DN = 'cn=Manager,dc=example,dc=com'
LDAP_ADMIN_USER_PW = 'password'

# The prefix of the attrs, such as cn or uid
LDAP_BASE_ATTR = 'uid'

# The basic LDAP data, also required by the Django DB
LDAP_USER_ATTR_MAP = {
    'username': 'uid',
    'first_name': 'givenName',
    'last_name': 'sn',
    'email': 'mail',
}

# Additional data, that can be mapped by the Django
# user profile
LDAP_PROFILE_ATTR_MAP = {
    'cn': 'cn',
    'all_mails': 'mail',
    'gecos': 'gecos',
# Gentoo specific variables
# 'gentoo_roles': 'gentooRoles',
# 'gentoo_access': 'gentooAccess',
# 'gentoo_location': 'gentooLocation',
# 'gentoo_status': 'gentooStatus',
# 'lat': 'lat',
# 'lon': 'lon',
# 'gpg_fingerprint': 'gpgfingerprint',
# 'gpg_key': 'gpgkey',
# 'ssh_public_key': 'sshPublicKey',
# KDE specific variables
#
#
}

# The attribute which has the groups that the user is part of
LDAP_ACL_ATTR = 'gentooAccess'

# Various groups and the equivalent booleans in UserProfile
LDAP_ACL_GROUPS = {
    'is_infra': 'infra-ldapadmin.group',
    'is_devrel' :'devrel.group',
    'is_recruiter': 'recruiters.group',
    'is_trustee': 'trustees.group',
    'is_docs': 'docs.group',
    'is_security': 'security.group',
    'is_pr': 'pr.group',
}

# List of attributes that are public to all users
LDAP_PROFILE_PUBLIC_ATTRIBUTES = ['username', 'first_name', 'last_name', 'cn', 'mail',
    'gentooAccess', 'gentooIm', 'gentooJoin', 'gentooLocation', 'gentooRoles', 'gentooSPF'
    'gentooStatus', 'lat', 'lon', 'gpgfingerprint', 'gpgkey', 'gecos']

# List of private attributes
LDAP_PROFILE_PRIVATE_ATTRIBUTES = ['birthday']

# The following groups have permissions to edit other users' profiles
LDAP_ACL_GROUPS_EDIT = ['is_recruiter', 'is_infra']

# List of objectClasses, used in user creation
LDAP_NEW_USER_OBJECTCLASS = ['person', 'top', 'posixAccount',
    'organizationalPerson', 'inetOrgPerson', 'shadowAccount']

# Base DN for new user
LDAP_NEW_USER_BASE_DN = 'ou=users,dc=example,dc=com'
